// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                         String         @id @default(uuid())
  clerkUserId                String         @unique
  email                      String         @unique
  name                       String?      
  imgageUrl                  String?
  industry                   String?
  industryInsight IndustryInsight? @relation(fields: [industry], references: [industry])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  //profile fields
  bio String?
  experience Int?   // Years of expreince
  skills String[]   // Array of skills

  assessments   Assessment[]
  resume        Resume?
  coverLetter   CoverLetter[]
}

model Assessment{
  id             String @id @default(cuid())
  userId         String
  user           User   @relation(fields: [userId], references: [id])
  quizeScore     Float
  quistions      Json[]
  category       String
  improvementTip String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}
model Resume{
  id             String @id @default(cuid())
  userId         String @unique
  user           User   @relation(fields: [userId], references: [id])
  content        String @db.Text  // Markdown content
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@index([userId])
}

model CoverLetter{
  id             String @id @default(cuid())
  userId         String 
  user           User   @relation(fields: [userId], references: [id])
  content        String   //markdown content
  jobDescirption String?
  companyName    String
  JobTitle       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  @@index([userId])
}

model IndustryInsight{
  id             String @id @default(cuid())
  industry       String @unique

  //user in this industry
  users           User[]

  //salary data 
  salaryRanges Json[]


  growthRate    Float
  demandLevel   DemandLevel
  topSkills     String

  marketOutlook  MarketOutlook
  keyTrends      String[]

  recommendedSkills  String[]

  lastupdated     DateTime   @default(now())
  nextupdated     DateTime

  @@index([industry])
}


enum DemandLevel{
  High
  Medium
  Low
}

enum MarketOutlook{
  Positive
  Neutral
  Negative
}